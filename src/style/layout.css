* {
  box-sizing: border-box;
  font-family: inherit;
  border-color: inherit;
}

body {
  font-family: var(--font), "Comic Sans MS";
  background-color: var(--background-color);
  border-color: var(--border-color);
}

body.dark {
  background-color: var(--background-color-dark);
  color: var(--text-color-dark);
  border-color: var(--border-color-dark);
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: bold;
  text-align: center;
}

p {
  height: min-content;
}

header {
  border-bottom-width: 1px;
  position: sticky;
  top: 0;
  z-index: 10;
}

main {
  padding: 2rem;
  display: flex;
  flex-direction: column;
  width: 100%;
  max-width: 48rem;
  margin-inline: auto;
  flex-grow: 1;
}

summary {
  display: flex;
  align-items: center;
  font-weight: bold;
}

summary::marker {
  content: '';
}

summary::before {
  content: 'â€º';
  margin-right: .4rem;
  font-size: 1.5rem;
  line-height: 1rem;
  font-weight: normal;
  font-family: inherit;
  margin-right: 0.5rem;
  transition: transform 200ms ease-in;
}

details[open] summary::before {
  transform: rotate(90deg);
}


form {
    margin-block: 1rem;
}

button, .button-like {
  background-color: var(--button-color);
  border-radius: 999rem;
  padding: .5rem;
  color: white;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: transform 100ms ease-in;
  font-size: 0.875rem;
  font-weight: bold;
  cursor: pointer;
  white-space: nowrap;
}

.dark button, .dark .button-like {
  background-color: var(--button-color-dark);
}

button.approve, .button-like.approve {
  background-color: var(--button-approve-color);
}

.dark button.approve, .dark .button-like.approve {
  background-color: var(--button-approve-color-dark);
}

button.cancel, .button-like.cancel {
  background-color: var(--button-cancel-color);
}

.dark button.cancel, .dark .button-like.cancel {
  background-color: var(--button-cancel-color-dark);
}

button:hover:not(:disabled), .button-like:hover:not(:disabled) {
  filter: brightness(1.05);
}

button:active:not(:disabled), .button-like:active:not(:disabled) {
  filter: brightness(1.1);
  transform: scale(.99);
}

button:disabled,
form[inert] button {
  background-color: slategray;
}

input:not([type="checkbox"]), select, option {
  width: 100%;
  padding: .5rem .5rem .3rem .5rem;
  margin-bottom: .2rem;
  border-bottom: 1px solid var(--border-color);
  outline: none;
  font-family: inherit;

}

.dark input:not([type="checkbox"]), .dark select, .dark option {
  color: var(--text-color-dark);
  background-color: black;
}

input:disabled, select:disabled {
  appearance: none;
}

input::placeholder, textarea::placeholder {
  font-style: italic;
  font-size: .8rem;
  font-family: var(--font);
}

input.key {
  font-family: 'Courier New', Courier, monospace;
}

input:disabled,
form[inert] input, form[inert] select {
  color: var(--input-disabled-color);
}

textarea {
  width: 100%;
  padding: .5rem .5rem .3rem .5rem;
  margin-bottom: .2rem;
  border: 1px solid var(--border-color);
  border-radius: 0.5rem;
  outline: none;
  font-family: inherit;
}

form[inert] textarea {
  color: var(--input-disabled-color);
}

hr {
  border: none;
  border-bottom: 1px solid var(--border-color);
  margin-block: 0.5rem;
}

.dark hr {
  border-color: var(--border-color-dark);
}

#root {
  height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: stretch;
}

.MuiAlert-root {
  position: fixed;
  bottom: -2px;
  left: 0;
  right: 0;
  pointer-events: none;
  animation: var(--animate-popup-bottom);
}